{"version":3,"sources":["components/Footer.tsx","components/Header.tsx","components/Layout.tsx","api.tsx","components/ProductCard.tsx","components/CardsSlider.tsx","components/ProductDetailsPage.tsx","components/Dropdowns.tsx","components/SortedSlider.tsx","components/Pagination.tsx","components/NoResult.tsx","pages/Accessories.tsx","pages/Favorites.tsx","components/Gallery.tsx","components/Categories.tsx","pages/Home.tsx","pages/Phones.tsx","pages/Tablets.tsx","components/LocalStorage.tsx","components/CartItem.tsx","pages/Cart.tsx","App.tsx","index.tsx"],"names":["Footer","className","to","href","type","onClick","window","scrollTo","Header","favorite","cart","params","useLocation","classNames","header__home","pathname","header__phones","id","length","Layout","mainUrl","ProductCard","phone","handleCart","handleFavorite","src","imageUrl","alt","name","discount","Math","floor","price","toString","hidden","screen","capacity","ram","includes","CardsSlider","title","list","useState","scroll","setScroll","maxShift","style","transform","map","ProductDetailsPage","allGadgets","gadgetsList","phoneInfo","setPhoneInfo","linkForBigPhoto","setLinkForBigPhoto","useParams","phonePrice","find","navigate","useNavigate","fetchInfo","fetch","then","response","ok","Error","status","statusText","json","requestSpecific","useEffect","images","image","display","screenSize","screenResolution","storage","description","android","os","battery","camera","primary","sizeAndWeight","weight","initialArray","randomIndex","arrayCopy","currentIndex","random","randomGadgets","Dropdowns","typeOptions","quantityOptions","typeButton","setTypeButton","typeTitle","setTypeTitle","quantityButton","setQuantityButton","quantityTitle","setQuantityTitle","useSearchParams","searchParams","setSearchParams","sort","get","perPage","option","value","page","perPageValue","query","handleSort","sortValue","handlePagination","SortedSlider","location","item","Pagination","numberOfPages","active","activePage","setActivePage","pages","i","push","NoResult","Accessories","phonesList","setQuery","inputClose","setInputClose","inputFilled","setInputFilled","initialPerPage","queryValue","filteredList","filter","toLowerCase","firstItemIndex","fragment","splice","applyQuery","useCallback","debounce","newQuery","pageValue","newParams","sortedList","a","b","localeCompare","age","sortingList","onChange","event","currentTarget","placeholder","slice","delete","ceil","Favorites","gadget","Gallery","galleryShift","setGalleryShift","galleryDot","setGalleryDot","Categories","phones","tablets","accessories","Home","Phones","Tablets","useLocalStorage","initialValue","key","localStorage","getItem","JSON","parse","setValue","setItem","stringify","CartItem","changeQuantity","quantity","setQuantity","totalPrice","prev","Cart","sum","setSum","message","setMessage","gadgetsInCart","totalCount","count","forEach","summingUp","setTimeout","App","setGadgetsList","setFavorite","setCart","tabletsList","accessoriesList","fetchPhones","prevState","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62509cf3.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const Footer = () => (\n  <footer className=\"footer\">\n    <Link to=\"/\" className=\"logo\" />\n\n    <nav className=\"nav footer__nav\">\n      <a href=\"/\" className=\"nav__link\">GITHUB</a>\n      <a href=\"/\" className=\"nav__link\">CONTACTS</a>\n      <a href=\"/\" className=\"nav__link\">RIGHTS</a>\n    </nav>\n\n    <div className=\"footer__up-button-container\">\n      <p className=\"nav__link\">Back to top</p>\n      <button\n        type=\"button\"\n        className=\"footer__up-button\"\n        onClick={() => {\n          window.scrollTo(0, 0);\n        }}\n      >\n        { }\n      </button>\n    </div>\n  </footer>\n);\n","import classNames from 'classnames';\nimport {\n  NavLink,\n  Link,\n  useLocation,\n} from 'react-router-dom';\n\ntype Props = {\n  favorite: string[],\n  cart: string[],\n};\n\nexport const Header: React.FC<Props> = ({\n  favorite,\n  cart,\n}) => {\n  const params = useLocation();\n\n  return (\n    <header\n      className={classNames('header',\n        {\n          header__home: params.pathname === '/',\n          header__phones: params.pathname !== '/',\n        })}\n      id=\"header\"\n    >\n      <div className=\"header__nav\">\n        <Link to=\"/\" className=\"logo header__logo\" />\n        <nav className=\"nav\">\n          <NavLink to=\"/\" className=\"nav__link\">HOME</NavLink>\n          <NavLink to=\"/phones\" className=\"nav__link\">PHONES</NavLink>\n          <NavLink to=\"/tablets\" className=\"nav__link\">TABLETS</NavLink>\n          <NavLink to=\"/accessories\" className=\"nav__link\">ACCESSORIES</NavLink>\n        </nav>\n      </div>\n      <div className=\"header__search-container\">\n\n        <NavLink to=\"/favorites\" className=\"header__customer header__customer--favorite\">\n          {favorite.length > 0 && (\n            <div className=\"counter\">{favorite.length}</div>\n          )}\n        </NavLink>\n        <NavLink to=\"/cart\" className=\"header__customer header__customer--cart\">\n          {cart.length > 0 && (\n            <div className=\"counter\">{cart.length}</div>\n          )}\n        </NavLink>\n      </div>\n    </header>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\n\ntype Props = {\n  favorite: string[],\n  cart: string[],\n};\n\nexport const Layout: React.FC<Props> = ({\n  favorite,\n  cart,\n}) => (\n  <>\n    <Header\n      favorite={favorite}\n      cart={cart}\n    />\n\n    <main>\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n\n    <Footer />\n  </>\n);\n","const mainUrl = 'https://mate-academy.github.io/react_phone-catalog/api/products';\n\nexport const requestAll = () => {\n  return fetch(`${mainUrl}.json`).then(response => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n};\n\nexport const requestSpecific = (id: string) => {\n  return fetch(`${mainUrl}/${id}.json`).then(response => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport interface Phone {\n  age: number,\n  id: string,\n  type: string,\n  imageUrl: string,\n  name: string,\n  snippet: string,\n  price: number,\n  discount: number,\n  screen: string,\n  capacity: string,\n  ram: string\n}\n\ntype Props = {\n  favorite: string[],\n  cart: string[],\n  phone: Phone,\n  handleCart: (id: string) => void,\n  handleFavorite: (id: string) => void,\n};\n\nexport const ProductCard: React.FC<Props> = ({\n  favorite,\n  cart,\n  phone,\n  handleCart,\n  handleFavorite,\n}) => {\n  return (\n    <div className=\"product-card\">\n      <NavLink to={`/${phone.type === 'accessory' ? 'accessorie' : phone.type}s/${phone.id}`}>\n        <div className=\"product-card__image-container\">\n          <img src={phone.imageUrl} alt={phone.name} className=\"product-card__image\" />\n        </div>\n        <div className=\"product-card__name\">{phone.name}</div>\n        <div className=\"product-card__price\">\n          <div\n            className=\"product-card__price--discount\"\n          >\n            {phone.discount !== 0\n              ? `$${Math.floor(phone.price - (phone.price * (phone.discount / 100)))}`\n              : `$${phone.price.toString()}`}\n          </div>\n          <div\n            hidden={phone.discount === 0}\n            className=\"product-card__price--initial\"\n          >\n            {`$${phone.price.toString()}`}\n          </div>\n        </div>\n        <div className=\"product-card__line\" />\n        <div className=\"product-card__description\">\n          <div className=\"product-card__description--property\">Screen</div>\n          <div className=\"product-card__description--value\">{phone.screen}</div>\n        </div>\n        <div className=\"product-card__description\">\n          <div className=\"product-card__description--property\">Capacity</div>\n          <div className=\"product-card__description--value\">{phone.capacity}</div>\n        </div>\n        <div className=\"product-card__description\">\n          <div className=\"product-card__description--property\">RAM</div>\n          <div className=\"product-card__description--value\">{phone.ram}</div>\n        </div>\n      </NavLink>\n      <div className=\"product-card__buttons\">\n        <button\n          type=\"button\"\n          className={classNames('product-card__buttons--card',\n            { 'in-card': cart.includes(phone.id) })}\n          onClick={() => {\n            handleCart(phone.id);\n          }}\n        >\n          {cart.includes(phone.id) ? 'Added to cart' : 'Add to cart'}\n        </button>\n        <button\n          type=\"button\"\n          className={classNames('product-card__buttons--favorite',\n            { 'in-favorites': favorite.includes(phone.id) })}\n          onClick={() => {\n            handleFavorite(phone.id);\n          }}\n        >\n          { }\n        </button>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { useState } from 'react';\nimport { ProductCard, Phone } from './ProductCard';\n\ntype Props = {\n  favorite: string[],\n  cart: string[],\n  title: string,\n  list: Phone[],\n  handleCart: (id: string) => void,\n  handleFavorite: (id: string) => void,\n};\n\nexport const CardsSlider: React.FC<Props> = ({\n  favorite,\n  cart,\n  title,\n  list,\n  handleCart,\n  handleFavorite,\n}) => {\n  const [scroll, setScroll] = useState(0);\n  const maxShift = (list.length - 3) * (288 - 16);\n\n  return (\n    <div className=\"cards-slider cards-slider--home\">\n      <div className=\"cards-slider__top-actions\">\n        <h2 className=\"cards-slider__title\">{title}</h2>\n        <div className=\"cards-slider__buttons-container\">\n          <button\n            type=\"button\"\n            className={classNames('cards-slider__button cards-slider__button--left',\n              { 'cards-slider__button--disabled': scroll === 0 })}\n            onClick={() => {\n              setScroll(scroll === 0 ? scroll : scroll + 288);\n            }}\n          >\n            { }\n          </button>\n          <button\n            type=\"button\"\n            className={classNames('cards-slider__button cards-slider__button--right',\n              { 'cards-slider__button--disabled': scroll - 288 <= -maxShift })}\n            onClick={() => {\n              setScroll(scroll - 288 <= -maxShift ? scroll : scroll - 288);\n            }}\n          >\n            { }\n          </button>\n        </div>\n      </div>\n      <div className=\"cards-slider__window\">\n        <div\n          className=\"cards-slider__card-container\"\n          style={{ transform: `translateX(${scroll}px)` }}\n        >\n          {list.map((phone: Phone) => (\n            <ProductCard\n              key={phone.id}\n              favorite={favorite}\n              cart={cart}\n              phone={phone}\n              handleCart={handleCart}\n              handleFavorite={handleFavorite}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { requestSpecific } from '../api';\nimport { CardsSlider } from './CardsSlider';\nimport { Phone } from './ProductCard';\n\ninterface PhoneInfo {\n  additionalFeatures: string,\n  android: {\n    os: string,\n    ui: string,\n  },\n  availability: string[],\n  battery: {\n    standbyTime: string,\n    talkTime: string,\n    type: string\n  },\n  camera: {\n    features: string[],\n    primary: string\n  },\n  connectivity: {\n    bluetooth: string,\n    cell: string,\n    gps: boolean,\n    infrared: boolean,\n    wifi: string\n  },\n  description: string,\n  display: {\n    screenResolution: string,\n    screenSize: string,\n    touchScreen: boolean\n  },\n  hardware: {\n    accelerometer: boolean,\n    audioJack: string,\n    cpu: string,\n    fmRadio: boolean,\n    physicalKeyboard: boolean,\n    usb: string\n  },\n  id: string,\n  images: string[],\n  name: string,\n  sizeAndWeight: {\n    dimensions: string[],\n    weight: string\n  },\n  storage: {\n    flash: string,\n    ram: string\n  }\n}\n\ntype Props = {\n  allGadgets: Phone[],\n  favorite: string[],\n  cart: string[],\n  gadgetsList: Phone[],\n  type: string,\n  handleCart: (id: string) => void,\n  handleFavorite: (id: string) => void,\n};\n\nexport const ProductDetailsPage: React.FC<Props> = ({\n  allGadgets,\n  favorite,\n  cart,\n  gadgetsList,\n  type,\n  handleCart,\n  handleFavorite,\n}) => {\n  const [phoneInfo, setPhoneInfo] = useState<PhoneInfo>();\n  const [linkForBigPhoto, setLinkForBigPhoto] = useState('');\n  const { id } = useParams();\n  const phonePrice = gadgetsList.find((phone: Phone) => phone.id === id);\n  const navigate = useNavigate();\n\n  const fetchInfo = () => {\n    return requestSpecific(id || '');\n  };\n\n  useEffect(() => {\n    fetchInfo().then((phone: PhoneInfo) => {\n      setPhoneInfo(phone);\n      setLinkForBigPhoto(phone.images[0]);\n    });\n  }, [id]);\n\n  const randomGadgets = (initialArray: Phone[]) => {\n    const arrayCopy = [...initialArray];\n    let currentIndex = arrayCopy.length;\n    let randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      arrayCopy[currentIndex] = arrayCopy[randomIndex];\n      arrayCopy[randomIndex] = arrayCopy[currentIndex];\n    }\n\n    return initialArray;\n  };\n\n  return (\n    <>\n      <div className=\"product-page__link-container\">\n        <Link to=\"/\" className=\"product-page__link\" />\n        <div className=\"product-page__arrow\" />\n        <div className=\"product-page__title product-details__title\">{type}</div>\n        <div className=\"product-page__arrow\" />\n        <div className=\"product-page__title\">{phoneInfo?.name}</div>\n      </div>\n\n      <div className=\"product-page__link-container\">\n        <div className=\"product-page__arrow product-details__arrow--back\" />\n        <button\n          type=\"button\"\n          className=\"product-details__title\"\n          onClick={() => {\n            navigate(-1);\n          }}\n        >\n          Back\n        </button>\n      </div>\n      <h2 className=\"section__title product-details__section-title\">{phoneInfo?.name}</h2>\n      <div className=\"product-details__top-block-container\">\n\n        <div className=\"product-details__photo-container\">\n          <ul className=\"product-details__small-photos-container\">\n            {phoneInfo?.images.map((image: string) => (\n              <li\n                key={image}\n                className=\"product-details__small-photo-container\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"product-details__small-photo-button\"\n                  onClick={() => {\n                    setLinkForBigPhoto(image);\n                  }}\n                >\n                  <img src={image} alt={phoneInfo.name} className=\"product-details__small-photo\" />\n                </button>\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"product-details__big-photo-container\">\n            <img\n              src={linkForBigPhoto}\n              alt={phoneInfo?.name}\n              className=\"product-details__big-photo\"\n            />\n          </div>\n\n          <div className=\"product-details__price-container\">\n            <div className=\"product-card__line\" />\n            {phonePrice && (\n              <div className=\"product-card__price\">\n                <div\n                  className=\"product-card__price--discount\"\n                >\n                  {phonePrice.discount !== 0\n                    ? `$${Math.floor(phonePrice.price\n                      - (phonePrice.price * (phonePrice.discount / 100)))}`\n                    : `$${phonePrice.price.toString()}`}\n                </div>\n                <div\n                  hidden={phonePrice.discount === 0}\n                  className=\"product-card__price--initial\"\n                >\n                  {`$${phonePrice.price.toString()}`}\n                </div>\n              </div>\n            )}\n\n            <button type=\"button\" className=\"product-card__buttons\">\n              <button\n                type=\"button\"\n                className={classNames('product-card__buttons--card',\n                  { 'in-card': cart.includes(id || '') })}\n                onClick={() => {\n                  handleCart(id || '');\n                }}\n              >\n                {cart.includes(id || '') ? 'Added to cart' : 'Add to cart'}\n              </button>\n              <button\n                type=\"button\"\n                className={classNames('product-card__buttons--favorite',\n                  { 'in-favorites': favorite.includes(id || '') })}\n                onClick={() => {\n                  handleFavorite(id || '');\n                }}\n              >\n                { }\n              </button>\n            </button>\n\n            <div>\n              <div className=\"product-card__description\">\n                <div className=\"product-card__description--property\">Screen size</div>\n                <div className=\"product-card__description--value\">{phoneInfo?.display.screenSize}</div>\n              </div>\n              <div className=\"product-card__description\">\n                <div className=\"product-card__description--property\">Resolution</div>\n                <div className=\"product-card__description--value\">{phoneInfo?.display.screenResolution}</div>\n              </div>\n              <div className=\"product-card__description\">\n                <div className=\"product-card__description--property\">RAM</div>\n                <div className=\"product-card__description--value\">{phoneInfo?.storage.ram}</div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"product-details__description-box\">\n        <div className=\"product-details__description-container\">\n          <h3 className=\"product-details__description-title\">About</h3>\n          <div className=\"product-details__description-line\" />\n          <p className=\"product-details__description-text\">{phoneInfo?.description}</p>\n        </div>\n\n        <div className=\"product-details__description-container--tech\">\n          <h3 className=\"product-details__description-title\">Tech specs</h3>\n          <div className=\"product-details__description-line\" />\n\n          <div className=\"product-details__params\">\n            <div className=\"product-card__description--property\">OS</div>\n            <div className=\"product-card__description--value\">{phoneInfo?.android.os}</div>\n          </div>\n          <div className=\"product-details__params\">\n            <div className=\"product-card__description--property\">Battery</div>\n            <div className=\"product-card__description--value\">{phoneInfo?.battery.type}</div>\n          </div>\n          <div className=\"product-details__params\">\n            <div className=\"product-card__description--property\">Camera</div>\n            <div className=\"product-card__description--value\">{phoneInfo?.camera.primary}</div>\n          </div>\n          <div className=\"product-details__params\">\n            <div className=\"product-card__description--property\">Weight</div>\n            <div className=\"product-card__description--value\">{phoneInfo?.sizeAndWeight.weight}</div>\n          </div>\n        </div>\n\n      </div>\n\n      <CardsSlider\n        favorite={favorite}\n        cart={cart}\n        title=\"You may also like\"\n        list={randomGadgets(allGadgets)}\n        handleCart={handleCart}\n        handleFavorite={handleFavorite}\n      />\n    </>\n  );\n};\n","import { useState } from 'react';\nimport classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const Dropdowns = () => {\n  const typeOptions = [\n    {\n      name: 'Newest',\n      type: 'age',\n    }, {\n      name: 'Alphabetically',\n      type: 'name',\n    }, {\n      name: 'Cheapest',\n      type: 'price',\n    }];\n\n  const quantityOptions = ['4', '8', '16', 'all'];\n\n  const [typeButton, setTypeButton] = useState(false);\n  const [typeTitle, setTypeTitle] = useState(typeOptions[0].name);\n  const [quantityButton, setQuantityButton] = useState(false);\n  const [quantityTitle, setQuantityTitle] = useState(quantityOptions[3]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sort = searchParams.get('sort') || '';\n  const perPage = searchParams.get('perPage') || '';\n\n  const handleSort = (value: string) => {\n    const page = searchParams.get('page') || '';\n    const perPageValue = searchParams.get('perPage') || '';\n    const query = searchParams.get('query') || '';\n    // eslint-disable-next-line\n    const params: any = {};\n\n    params.sort = value;\n\n    if (page) {\n      params.page = page;\n      params.perPage = perPageValue;\n    }\n\n    if (query) {\n      params.query = query;\n    }\n\n    setSearchParams(params);\n  };\n\n  const handlePagination = (value: string) => {\n    const sortValue = searchParams.get('sort') || '';\n    const page = searchParams.get('page') || '1';\n    const query = searchParams.get('query') || '';\n    // eslint-disable-next-line\n    const params: any = {};\n\n    if (sort) {\n      params.sort = sortValue;\n    }\n\n    if (page) {\n      params.page = page;\n    }\n\n    params.perPage = value;\n\n    if (query) {\n      params.query = query;\n    }\n\n    setSearchParams(params);\n  };\n\n  return (\n    <div className=\"dropdown__container\">\n      <div className=\"sorted-slider__input-container\">\n        <div className=\"sorted-slider__input-title\">Sort by</div>\n\n        <div className=\"dropdown\">\n          <button\n            type=\"button\"\n            className={classNames('dropdown__button',\n              { 'dropdown__button--active': typeButton })}\n            onClick={() => {\n              setTypeButton(!typeButton);\n            }}\n          >\n            <div className=\"dropdown__button-title\">{sort || typeTitle}</div>\n            <div className=\"dropdown__button-arrow\" />\n          </button>\n          <div className=\"dropdown__list-container\">\n            <div className=\"dropdown__list\">\n              {typeOptions.map((option) => (\n                <button\n                  value={sort}\n                  key={option.name}\n                  type=\"button\"\n                  name={option.type}\n                  className=\"dropdown__item\"\n                  onClick={() => {\n                    handleSort(option.type);\n                    setTypeButton(false);\n                    setTypeTitle(option.name);\n                  }}\n                >\n                  {option.name}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"sorted-slider__input-container\">\n        <div className=\"sorted-slider__input-title\">Items on page</div>\n\n        <div className=\"dropdown\">\n          <button\n            type=\"button\"\n            className={classNames('dropdown__button',\n              { 'dropdown__button--active': quantityButton })}\n            onClick={() => {\n              setQuantityButton(!quantityButton);\n            }}\n          >\n            <div className=\"dropdown__button-title\">{quantityTitle}</div>\n            <div className=\"dropdown__button-arrow\" />\n          </button>\n          <div className=\"dropdown__list-container\">\n            <div className=\"dropdown__list\">\n              {quantityOptions.map((option) => (\n                <button\n                  value={perPage}\n                  key={option}\n                  type=\"button\"\n                  className=\"dropdown__item\"\n                  onClick={() => {\n                    handlePagination(option);\n                    setQuantityButton(false);\n                    setQuantityTitle(option);\n                  }}\n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useLocation } from 'react-router-dom';\nimport { Dropdowns } from './Dropdowns';\nimport { ProductCard, Phone } from './ProductCard';\n\ntype Props = {\n  favorite: string[],\n  cart: string[],\n  list: Phone[],\n  handleCart: (id: string) => void,\n  handleFavorite: (id: string) => void,\n};\n\nexport const SortedSlider: React.FC<Props> = ({\n  favorite,\n  cart,\n  list,\n  handleCart,\n  handleFavorite,\n}) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"sorted-slider\">\n      {location.pathname !== '/favorites' && (\n        <Dropdowns />\n      )}\n      <div className=\"sorted-slider__continer\">\n        {list.map(item => (\n          <div\n            key={item.id}\n            className=\"sorted-slider__card-container\"\n          >\n            <ProductCard\n              favorite={favorite}\n              cart={cart}\n              phone={item}\n              handleCart={handleCart}\n              handleFavorite={handleFavorite}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  numberOfPages: number,\n};\n\nexport const Pagination: React.FC<Props> = ({ numberOfPages }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const active = searchParams.get('page') || 1;\n  const [activePage, setActivePage] = useState(+active);\n  const pages = [];\n\n  for (let i = 1; i <= numberOfPages; i += 1) {\n    pages.push(i);\n  }\n\n  const handlePagination = (value: string) => {\n    const page = value;\n    const perPage = searchParams.get('perPage') || '';\n    const sort = searchParams.get('sort') || '';\n    const query = searchParams.get('query') || '';\n\n    if (!sort && !query) {\n      setSearchParams({ page, perPage });\n    } else if (sort && !query) {\n      setSearchParams({ sort, page, perPage });\n    } else if (!sort && query) {\n      setSearchParams({ page, perPage, query });\n    } else {\n      setSearchParams({\n        sort,\n        page,\n        perPage,\n        query,\n      });\n    }\n  };\n\n  return (\n    <>\n      {pages.length !== 1 && (\n        <div className=\"pagination pagination__phone\">\n          <ul className=\"pagination__list\">\n            <li key={0}>\n              <button\n                type=\"button\"\n                className={classNames('pagination__button pagination__button--prev',\n                  { 'pagination__button--disabled': activePage === 1 })}\n                onClick={() => {\n                  setActivePage(activePage === 1 ? 1 : activePage - 1);\n                  handlePagination((activePage - 1).toString());\n                }}\n              >\n                { }\n              </button>\n            </li>\n            {pages.map(page => (\n              <li key={page}>\n                <button\n                  type=\"button\"\n                  className={classNames('pagination__button',\n                    { 'pagination__button--active': page === activePage })}\n                  onClick={() => {\n                    setActivePage(page);\n                    handlePagination(page.toString());\n                  }}\n                >\n                  {page}\n                </button>\n              </li>\n            ))}\n            <li key={numberOfPages + 1}>\n              <button\n                type=\"button\"\n                className={classNames('pagination__button pagination__button--next',\n                  { 'pagination__button--disabled': activePage === pages.length })}\n                onClick={() => {\n                  setActivePage(activePage === pages.length ? pages.length : activePage + 1);\n                  handlePagination((activePage + 1).toString());\n                }}\n              >\n                { }\n              </button>\n            </li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n","export const NoResult = () => {\n  return (\n    <div className=\"no-result\">\n      <h2 className=\"section__title\">None for today, sorry!</h2>\n    </div>\n  );\n};\n","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useCallback } from 'react';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { SortedSlider } from '../components/SortedSlider';\nimport { Pagination } from '../components/Pagination';\nimport { NoResult } from '../components/NoResult';\nimport { Phone } from '../components/ProductCard';\n\ntype Props = {\n  favorite: string[],\n  cart: string[],\n  phonesList: Phone[],\n  handleCart: (id: string) => void,\n  handleFavorite: (id: string) => void,\n};\n\nexport const Accessories: React.FC<Props> = ({\n  favorite,\n  cart,\n  phonesList,\n  handleCart,\n  handleFavorite,\n}) => {\n  const params = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [inputClose, setInputClose] = useState(true);\n  const [inputFilled, setInputFilled] = useState(false);\n\n  const page = searchParams.get('page') || 1;\n  const initialPerPage = searchParams.get('perPage') || phonesList.length;\n  const perPage = initialPerPage === 'all' ? phonesList.length : initialPerPage;\n  const sort = searchParams.get('sort');\n  const queryValue = searchParams.get('query') || '';\n\n  const filteredList\n    = phonesList.filter((item: Phone) => (item.name.toLowerCase()\n      .includes(queryValue.toLowerCase())));\n\n  const lastItemIndex = +page * +perPage;\n  const firstItemIndex = lastItemIndex - +perPage;\n  const fragment = [...filteredList].splice(firstItemIndex, +perPage);\n\n  const sortingList = (type: string) => {\n    switch (type) {\n      case 'name':\n        fragment.sort((a: Phone, b: Phone) => a.name.localeCompare(b.name));\n        break;\n\n      case 'age':\n        fragment.sort((a: Phone, b: Phone) => a.age - b.age);\n        break;\n\n      case 'price':\n        fragment.sort((a: Phone, b: Phone) => {\n          return (a.discount !== 0 ? Math.floor(a.price - (a.price * (a.discount / 100))) : a.price)\n            - (b.discount !== 0 ? Math.floor(b.price - (b.price * (b.discount / 100))) : b.price);\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        setInputFilled(true);\n        setInputClose(false);\n      }\n\n      const pageValue = searchParams.get('page') || '';\n      const sortValue = searchParams.get('sort') || '';\n      const perPageValue = searchParams.get('perPage') || '';\n      // eslint-disable-next-line\n      const newParams: any = {};\n\n      if (pageValue) {\n        newParams.page = pageValue;\n      }\n\n      if (sortValue) {\n        newParams.sort = sortValue;\n      }\n\n      if (perPageValue) {\n        newParams.perPage = perPageValue;\n      }\n\n      if (newQuery) {\n        newParams.query = newQuery;\n      }\n\n      setSearchParams(newParams);\n    }, 1000), [],\n  );\n\n  const HandleQueryChange = (event: React.FormEvent<HTMLInputElement>): void => {\n    setQuery(event.currentTarget.value);\n    applyQuery(event.currentTarget.value);\n  };\n\n  const sortedList = sort ? sortingList(sort) : fragment;\n\n  return (\n    <>\n      <div className=\"product-page__search\">\n        <input\n          type=\"text\"\n          className={classNames('product-page__search-input',\n            { 'product-page__search-input--filled': inputFilled })}\n          value={query}\n          onChange={HandleQueryChange}\n          placeholder={`Search in ${params.pathname.slice(1)}...`}\n        />\n        <button\n          type=\"button\"\n          className=\"product-page__search-close\"\n          hidden={inputClose}\n          onClick={() => {\n            setInputFilled(false);\n            setInputClose(true);\n            setQuery('');\n            searchParams.delete('query');\n            setSearchParams(searchParams);\n          }}\n        >\n          { }\n        </button>\n      </div>\n      {\n        phonesList.length > 0 ? (\n          <>\n            <div className=\"product-page__link-container\">\n              <Link to=\"/\" className=\"product-page__link\" />\n              <div className=\"product-page__arrow\" />\n              <div className=\"product-page__title\">Accessories</div>\n            </div>\n            <h2 className=\"section__title product-page__section-title\">Accessories</h2>\n            <div className=\"section__counter\">{`${phonesList.length} models`}</div>\n            <SortedSlider\n              favorite={favorite}\n              cart={cart}\n              list={sortedList || fragment}\n              handleCart={handleCart}\n              handleFavorite={handleFavorite}\n            />\n            {perPage && (\n              <Pagination numberOfPages={Math.ceil(filteredList.length / +perPage)} />\n            )}\n          </>\n        ) : (\n          <NoResult />\n        )\n      }\n    </>\n\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { NoResult } from '../components/NoResult';\nimport { SortedSlider } from '../components/SortedSlider';\nimport { Phone } from '../components/ProductCard';\n\ntype Props = {\n  gadgetsList: Phone[],\n  handleCart: (id: string) => void,\n  handleFavorite: (id: string) => void,\n  favorite: string[],\n  cart: string[],\n};\n\nexport const Favorites: React.FC<Props> = ({\n  gadgetsList,\n  handleCart,\n  handleFavorite,\n  favorite,\n  cart,\n}) => {\n  return (\n    <>\n      {\n        favorite.length > 0 ? (\n          <>\n            <div className=\"product-page__link-container\">\n              <Link to=\"/\" className=\"product-page__link\" />\n              <div className=\"product-page__arrow\" />\n              <div className=\"product-page__title\">Favourites</div>\n            </div>\n            <h2 className=\"section__title product-page__section-title\">Favourites</h2>\n            <div className=\"section__counter\">{`${favorite.length} items`}</div>\n            <SortedSlider\n              favorite={favorite}\n              cart={cart}\n              list={gadgetsList.filter((gadget: Phone) => favorite.includes(gadget.id))}\n              handleCart={handleCart}\n              handleFavorite={handleFavorite}\n            />\n          </>\n        ) : (\n          <NoResult />\n        )\n      }\n    </>\n  );\n};\n","import { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const Gallery = () => {\n  const [galleryShift, setGalleryShift] = useState(0);\n  const [galleryDot, setGalleryDot] = useState(1);\n\n  return (\n    <div className=\"gallery gallery__home\">\n      <div\n        className=\"gallery__container\"\n      >\n        <button\n          className={classNames('gallery__arrow gallery__arrow--left',\n            { 'gallery__arrow--disabled': galleryShift === 0 })}\n          type=\"button\"\n          onClick={() => {\n            setGalleryShift(galleryShift === 0 ? galleryShift : galleryShift + 1040);\n            setGalleryDot(galleryDot === 1 ? 1 : galleryDot - 1);\n          }}\n        >\n          { }\n        </button>\n        <div className=\"gallery__window\">\n          <div\n            className=\"gallery__picture-container\"\n            style={{ transform: `translateX(${galleryShift}px)` }}\n          >\n            <div>\n              <img\n                src=\"./img/Banner.png\"\n                alt=\"phone-banner\"\n                className=\"gallery__picture\"\n              />\n            </div>\n            <div>\n              <img\n                src=\"./img/Banner2.png\"\n                alt=\"phone-banner\"\n                className=\"gallery__picture\"\n              />\n            </div>\n            <div>\n              <img\n                src=\"./img/Banner3.png\"\n                alt=\"phone-banner\"\n                className=\"gallery__picture\"\n              />\n            </div>\n          </div>\n        </div>\n        <button\n          className={classNames('gallery__arrow gallery__arrow--right',\n            { 'gallery__arrow--disabled': galleryShift - 1040 <= -3120 })}\n          type=\"button\"\n          onClick={() => {\n            setGalleryShift(galleryShift - 1040 <= -3120 ? galleryShift : galleryShift - 1040);\n            setGalleryDot(galleryDot === 3 ? 3 : galleryDot + 1);\n          }}\n        >\n          { }\n        </button>\n      </div>\n      <div className=\"gallery__dot-container\">\n        <span className={classNames('gallery__dot', { 'gallery__dot--active': galleryDot === 1 })} />\n        <span className={classNames('gallery__dot', { 'gallery__dot--active': galleryDot === 2 })} />\n        <span className={classNames('gallery__dot', { 'gallery__dot--active': galleryDot === 3 })} />\n      </div>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { Phone } from './ProductCard';\n\ntype Props = {\n  gadgetsList: Phone[],\n};\n\nexport const Categories: React.FC<Props> = ({ gadgetsList }) => {\n  const phones = gadgetsList.filter(gadget => gadget.type === 'phone');\n  const tablets = gadgetsList.filter(gadget => gadget.type === 'tablet');\n  const accessories = gadgetsList.filter(gadget => gadget.type === 'accessory');\n\n  return (\n    <div className=\"categories\">\n      <h2 className=\"categories__title\">Shop by category</h2>\n      <div className=\"categories__link-container\">\n        <Link to=\"/phones\" className=\"categories__link\">\n          <div>\n            <img\n              src=\"./img/link-banners/link-mobile.png\"\n              alt=\"mobile phones\"\n              className=\"categories__link-banner\"\n            />\n          </div>\n          <div className=\"categories__link-title\">Mobile phones</div>\n          <div className=\"categories__link-quantity\">\n            {`${phones.length} models`}\n          </div>\n        </Link>\n        <Link to=\"/tablets\" className=\"categories__link\">\n          <div>\n            <img\n              src=\"./img/link-banners/link-tablets.png\"\n              alt=\"tablets\"\n              className=\"categories__link-banner\"\n            />\n          </div>\n          <div className=\"categories__link-title\">Tablets</div>\n          <div className=\"categories__link-quantity\">\n            {`${tablets.length} models`}\n          </div>\n        </Link>\n        <Link to=\"/accessories\" className=\"categories__link\">\n          <div>\n            <img\n              src=\"./img/link-banners/link-accesories.png\"\n              alt=\"accessories\"\n              className=\"categories__link-banner\"\n            />\n          </div>\n          <div className=\"categories__link-title\">Accessories</div>\n          <div className=\"categories__link-quantity\">\n            {`${accessories.length} models`}\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { Gallery } from '../components/Gallery';\nimport { CardsSlider } from '../components/CardsSlider';\nimport { Categories } from '../components/Categories';\nimport { Phone } from '../components/ProductCard';\n\ntype Props = {\n  favorite: string[],\n  cart: string[],\n  gadgetsList: Phone[],\n  handleCart: (id: string) => void,\n  handleFavorite: (id: string) => void,\n};\n\nexport const Home: React.FC<Props> = ({\n  favorite,\n  cart,\n  gadgetsList,\n  handleCart,\n  handleFavorite,\n}) => {\n  return (\n    <>\n      <Gallery />\n      <CardsSlider\n        title=\"Hot prices\"\n        list={gadgetsList.filter((item: Phone) => item.discount !== 0)}\n        favorite={favorite}\n        cart={cart}\n        handleCart={handleCart}\n        handleFavorite={handleFavorite}\n      />\n      <Categories gadgetsList={gadgetsList} />\n      <CardsSlider\n        title=\"Brand new models\"\n        list={gadgetsList.filter((item: Phone) => item.discount === 0)\n          .sort((a: Phone, b: Phone) => b.price - a.price)}\n        favorite={favorite}\n        cart={cart}\n        handleCart={handleCart}\n        handleFavorite={handleFavorite}\n      />\n    </>\n  );\n};\n","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useCallback } from 'react';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { SortedSlider } from '../components/SortedSlider';\nimport { Pagination } from '../components/Pagination';\nimport { NoResult } from '../components/NoResult';\nimport { Phone } from '../components/ProductCard';\n\ntype Props = {\n  favorite: string[],\n  cart: string[],\n  phonesList: Phone[],\n  handleCart: (id: string) => void,\n  handleFavorite: (id: string) => void,\n};\n\nexport const Phones: React.FC<Props> = ({\n  favorite,\n  cart,\n  phonesList,\n  handleCart,\n  handleFavorite,\n}) => {\n  const params = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [inputClose, setInputClose] = useState(true);\n  const [inputFilled, setInputFilled] = useState(false);\n\n  const page = searchParams.get('page') || 1;\n  const initialPerPage = searchParams.get('perPage') || phonesList.length;\n  const perPage = initialPerPage === 'all' ? phonesList.length : initialPerPage;\n  const sort = searchParams.get('sort');\n  const queryValue = searchParams.get('query') || '';\n\n  const filteredList\n    = phonesList.filter((item: Phone) => (item.name.toLowerCase()\n      .includes(queryValue.toLowerCase())));\n\n  const lastItemIndex = +page * +perPage;\n  const firstItemIndex = lastItemIndex - +perPage;\n  const fragment = [...filteredList].splice(firstItemIndex, +perPage);\n\n  const sortingList = (type: string) => {\n    switch (type) {\n      case 'name':\n        fragment.sort((a: Phone, b: Phone) => a.name.localeCompare(b.name));\n        break;\n\n      case 'age':\n        fragment.sort((a: Phone, b: Phone) => a.age - b.age);\n        break;\n\n      case 'price':\n        fragment.sort((a: Phone, b: Phone) => {\n          return (a.discount !== 0 ? Math.floor(a.price - (a.price * (a.discount / 100))) : a.price)\n            - (b.discount !== 0 ? Math.floor(b.price - (b.price * (b.discount / 100))) : b.price);\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        setInputFilled(true);\n        setInputClose(false);\n      }\n\n      const pageValue = searchParams.get('page') || '';\n      const sortValue = searchParams.get('sort') || '';\n      const perPageValue = searchParams.get('perPage') || '';\n      // eslint-disable-next-line\n      const newParams: any = {};\n\n      if (pageValue) {\n        newParams.page = pageValue;\n      }\n\n      if (sortValue) {\n        newParams.sort = sortValue;\n      }\n\n      if (perPageValue) {\n        newParams.perPage = perPageValue;\n      }\n\n      if (newQuery) {\n        newParams.query = newQuery;\n      }\n\n      setSearchParams(newParams);\n    }, 1000), [],\n  );\n\n  const HandleQueryChange = (event: React.FormEvent<HTMLInputElement>): void => {\n    setQuery(event.currentTarget.value);\n    applyQuery(event.currentTarget.value);\n  };\n\n  const sortedList = sort ? sortingList(sort) : fragment;\n\n  return (\n    <>\n      <div className=\"product-page__search\">\n        <input\n          type=\"text\"\n          className={classNames('product-page__search-input',\n            { 'product-page__search-input--filled': inputFilled })}\n          value={query}\n          onChange={HandleQueryChange}\n          placeholder={`Search in ${params.pathname.slice(1)}...`}\n        />\n        <button\n          type=\"button\"\n          className=\"product-page__search-close\"\n          hidden={inputClose}\n          onClick={() => {\n            setInputFilled(false);\n            setInputClose(true);\n            setQuery('');\n            searchParams.delete('query');\n            setSearchParams(searchParams);\n          }}\n        >\n          { }\n        </button>\n      </div>\n      {\n        phonesList.length > 0 ? (\n          <>\n            <div className=\"product-page__link-container\">\n              <Link to=\"/\" className=\"product-page__link\" />\n              <div className=\"product-page__arrow\" />\n              <div className=\"product-page__title\">Phones</div>\n            </div>\n            <h2 className=\"section__title product-page__section-title\">Mobile phones</h2>\n            <div className=\"section__counter\">{`${phonesList.length} models`}</div>\n            <SortedSlider\n              favorite={favorite}\n              cart={cart}\n              list={sortedList || fragment}\n              handleCart={handleCart}\n              handleFavorite={handleFavorite}\n            />\n            {perPage && (\n              <Pagination numberOfPages={Math.ceil(filteredList.length / +perPage)} />\n            )}\n          </>\n        ) : (\n          <NoResult />\n        )\n      }\n    </>\n\n  );\n};\n","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useCallback } from 'react';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { SortedSlider } from '../components/SortedSlider';\nimport { Pagination } from '../components/Pagination';\nimport { NoResult } from '../components/NoResult';\nimport { Phone } from '../components/ProductCard';\n\ntype Props = {\n  favorite: string[],\n  cart: string[],\n  phonesList: Phone[],\n  handleCart: (id: string) => void,\n  handleFavorite: (id: string) => void,\n};\n\nexport const Tablets: React.FC<Props> = ({\n  favorite,\n  cart,\n  phonesList,\n  handleCart,\n  handleFavorite,\n}) => {\n  const params = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [inputClose, setInputClose] = useState(true);\n  const [inputFilled, setInputFilled] = useState(false);\n\n  const page = searchParams.get('page') || 1;\n  const initialPerPage = searchParams.get('perPage') || phonesList.length;\n  const perPage = initialPerPage === 'all' ? phonesList.length : initialPerPage;\n  const sort = searchParams.get('sort');\n  const queryValue = searchParams.get('query') || '';\n\n  const filteredList\n    = phonesList.filter((item: Phone) => (item.name.toLowerCase()\n      .includes(queryValue.toLowerCase())));\n\n  const lastItemIndex = +page * +perPage;\n  const firstItemIndex = lastItemIndex - +perPage;\n  const fragment = [...filteredList].splice(firstItemIndex, +perPage);\n\n  const sortingList = (type: string) => {\n    switch (type) {\n      case 'name':\n        fragment.sort((a: Phone, b: Phone) => a.name.localeCompare(b.name));\n        break;\n\n      case 'age':\n        fragment.sort((a: Phone, b: Phone) => a.age - b.age);\n        break;\n\n      case 'price':\n        fragment.sort((a: Phone, b: Phone) => {\n          return (a.discount !== 0 ? Math.floor(a.price - (a.price * (a.discount / 100))) : a.price)\n            - (b.discount !== 0 ? Math.floor(b.price - (b.price * (b.discount / 100))) : b.price);\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        setInputFilled(true);\n        setInputClose(false);\n      }\n\n      const pageValue = searchParams.get('page') || '';\n      const sortValue = searchParams.get('sort') || '';\n      const perPageValue = searchParams.get('perPage') || '';\n      // eslint-disable-next-line\n      const newParams: any = {};\n\n      if (pageValue) {\n        newParams.page = pageValue;\n      }\n\n      if (sortValue) {\n        newParams.sort = sortValue;\n      }\n\n      if (perPageValue) {\n        newParams.perPage = perPageValue;\n      }\n\n      if (newQuery) {\n        newParams.query = newQuery;\n      }\n\n      setSearchParams(newParams);\n    }, 1000), [],\n  );\n\n  const HandleQueryChange = (event: React.FormEvent<HTMLInputElement>): void => {\n    setQuery(event.currentTarget.value);\n    applyQuery(event.currentTarget.value);\n  };\n\n  const sortedList = sort ? sortingList(sort) : fragment;\n\n  return (\n    <>\n      <div className=\"product-page__search\">\n        <input\n          type=\"text\"\n          className={classNames('product-page__search-input',\n            { 'product-page__search-input--filled': inputFilled })}\n          value={query}\n          onChange={HandleQueryChange}\n          placeholder={`Search in ${params.pathname.slice(1)}...`}\n        />\n        <button\n          type=\"button\"\n          className=\"product-page__search-close\"\n          hidden={inputClose}\n          onClick={() => {\n            setInputFilled(false);\n            setInputClose(true);\n            setQuery('');\n            searchParams.delete('query');\n            setSearchParams(searchParams);\n          }}\n        >\n          { }\n        </button>\n      </div>\n      {\n        phonesList.length > 0 ? (\n          <>\n            <div className=\"product-page__link-container\">\n              <Link to=\"/\" className=\"product-page__link\" />\n              <div className=\"product-page__arrow\" />\n              <div className=\"product-page__title\">Tablets</div>\n            </div>\n            <h2 className=\"section__title product-page__section-title\">Tablets</h2>\n            <div className=\"section__counter\">{`${phonesList.length} models`}</div>\n            <SortedSlider\n              favorite={favorite}\n              cart={cart}\n              list={sortedList || fragment}\n              handleCart={handleCart}\n              handleFavorite={handleFavorite}\n            />\n            {perPage && (\n              <Pagination numberOfPages={Math.ceil(filteredList.length / +perPage)} />\n            )}\n          </>\n        ) : (\n          <NoResult />\n        )\n      }\n    </>\n\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport const useLocalStorage = (initialValue: [], key: string) => {\n  const getValue = () => {\n    const storage = localStorage.getItem(key);\n\n    if (storage) {\n      return JSON.parse(storage);\n    }\n\n    return initialValue;\n  };\n\n  const [value, setValue] = useState(getValue);\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value]);\n\n  return [value, setValue];\n};\n","import classNames from 'classnames';\nimport { useState } from 'react';\nimport { Phone } from './ProductCard';\n\ntype Props = {\n  item: Phone,\n  handleCart: (id: string) => void,\n  changeQuantity: (type: string, price: number) => void,\n};\n\nexport const CartItem: React.FC<Props> = ({\n  item,\n  handleCart,\n  changeQuantity,\n}) => {\n  const [quantity, setQuantity] = useState(1);\n\n  const totalPrice: number = item.discount !== 0\n    ? Math.floor(item.price - (item.price * (item.discount / 100)))\n    : item.price;\n\n  return (\n    <div className=\"cart-item__cell\">\n      <button\n        type=\"button\"\n        className=\"cart-item__close\"\n        onClick={() => {\n          handleCart(item.id);\n        }}\n      >\n        { }\n      </button>\n      <img src={item.imageUrl} alt={item.name} className=\"cart-item__image\" />\n      <div className=\"cart-item__description\">{item.name}</div>\n      <div className=\"cart-item__buttons\">\n        <button\n          type=\"button\"\n          className={classNames('cart-item__button cart-item__button--minus',\n            { 'cart-item__button--disabled': quantity === 1 })}\n          onClick={() => {\n            setQuantity(prev => (\n              quantity === 1 ? 1 : prev - 1\n            ));\n            changeQuantity('-', quantity === 1 ? 0 : totalPrice);\n          }}\n        >\n          -\n        </button>\n        <div className=\"cart-item__quantity\">\n          {quantity}\n        </div>\n        <button\n          type=\"button\"\n          className=\"cart-item__button cart-item__button--plus\"\n          onClick={() => {\n            setQuantity(prev => (\n              prev + 1\n            ));\n            changeQuantity('+', totalPrice);\n          }}\n        >\n          +\n        </button>\n      </div>\n      <div className=\"cart-item__price\">\n        {`$${(totalPrice * quantity).toString()}`}\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CartItem } from '../components/CartItem';\nimport { NoResult } from '../components/NoResult';\nimport { Phone } from '../components/ProductCard';\n\ntype Props = {\n  gadgetsList: Phone[],\n  handleCart: (id: string) => void,\n  handleFavorite: (id: string) => void,\n  favorite: string[],\n  cart: string[],\n};\n\nexport const Cart: React.FC<Props> = ({\n  handleCart,\n  gadgetsList,\n  cart,\n}) => {\n  const [sum, setSum] = useState(0);\n  const [message, setMessage] = useState(false);\n  const gadgetsInCart = gadgetsList.filter(gadget => cart.includes(gadget.id));\n  const navigate = useNavigate();\n\n  const summingUp = () => {\n    let count = 0;\n\n    gadgetsList.forEach((item: Phone) => {\n      if (cart.includes(item.id)) {\n        const totalPrice: number = item.discount !== 0\n          ? Math.floor(item.price - (item.price * (item.discount / 100)))\n          : item.price;\n\n        count += totalPrice;\n      }\n    });\n\n    return count;\n  };\n\n  useEffect(() => {\n    const totalCount = summingUp();\n\n    setSum(totalCount);\n  }, []);\n\n  const changeQuantity = (type: string, price: number) => {\n    if (type === '-') {\n      setSum(prev => prev - price);\n    } else {\n      setSum(prev => prev + price);\n    }\n  };\n\n  return (\n    <>\n      {\n        cart.length > 0 ? (\n          <>\n            <div className=\"product-page__link-container\">\n              <div className=\"product-page__arrow product-details__arrow--back\" />\n              <button\n                type=\"button\"\n                className=\"product-details__title\"\n                onClick={() => {\n                  navigate(-1);\n                }}\n              >\n                Back\n              </button>\n            </div>\n            <h2 className=\"section__title cart__title\">Cart</h2>\n\n            <div className=\"cart\">\n              <div className=\"cart__cells\">\n                <ul>\n                  {gadgetsInCart.map(item => (\n                    <li key={item.id}>\n                      <CartItem\n                        item={item}\n                        changeQuantity={changeQuantity}\n                        handleCart={handleCart}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"cart__total-container\">\n                <div className=\"cart-item__price cart-item__price-total\">\n                  {`$${sum}`}\n                </div>\n                <div className=\"cart__total-text\">{`Total for ${cart.length} items`}</div>\n                <div className=\"cart__total-line\" />\n                <button\n                  className=\"cart__total-checkout\"\n                  type=\"button\"\n                  onClick={() => {\n                    setMessage(true);\n                    setTimeout(() => {\n                      setMessage(false);\n                    }, 3000);\n                  }}\n                >\n                  Checkout\n                </button>\n                <div\n                  className={classNames('message', { 'message--active': message })}\n                >\n                  We are still working at this functionality...\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          <NoResult />\n        )\n      }\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Layout } from './components/Layout';\nimport { ProductDetailsPage } from './components/ProductDetailsPage';\nimport { Accessories } from './pages/Accessories';\nimport { Favorites } from './pages/Favorites';\nimport { Home } from './pages/Home';\nimport { Phones } from './pages/Phones';\nimport { Tablets } from './pages/Tablets';\nimport { useLocalStorage } from './components/LocalStorage';\nimport { requestAll } from './api';\nimport { Phone } from './components/ProductCard';\nimport { Cart } from './pages/Cart';\n\nconst App = () => {\n  const [gadgetsList, setGadgetsList] = useState([]);\n  const [favorite, setFavorite] = useLocalStorage([], 'favorites');\n  const [cart, setCart] = useLocalStorage([], 'cart');\n\n  const phonesList = gadgetsList.filter((phone: Phone) => phone.type === 'phone');\n  const tabletsList = gadgetsList.filter((phone: Phone) => phone.type === 'tablet');\n  const accessoriesList = gadgetsList.filter((phone: Phone) => phone.type === 'accessory');\n\n  const fetchPhones = () => {\n    return requestAll();\n  };\n\n  useEffect(() => {\n    fetchPhones().then((list) => {\n      setGadgetsList(list);\n    });\n  }, []);\n\n  const handleFavorite = (id: string) => {\n    if (favorite.find((item: string) => item === id)) {\n      setFavorite((prev: string[]) => {\n        return prev.filter(item => item !== id);\n      });\n    } else {\n      setFavorite((prevState: string[]) => {\n        const newArray = [...prevState, id];\n\n        return newArray;\n      });\n    }\n  };\n\n  const handleCart = (id: string) => {\n    if (cart.find((item: string) => item === id)) {\n      setCart((prev: string[]) => {\n        const newArray = prev.filter(item => item !== id);\n\n        return newArray;\n      });\n    } else {\n      setCart((prevState: string[]) => {\n        const newArray = [...prevState, id];\n\n        return newArray;\n      });\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Routes>\n        <Route\n          path=\"/\"\n          element={(\n            <Layout\n              favorite={favorite}\n              cart={cart}\n            />\n          )}\n        >\n          <Route\n            index\n            element={(\n              <Home\n                favorite={favorite}\n                cart={cart}\n                gadgetsList={gadgetsList}\n                handleCart={handleCart}\n                handleFavorite={handleFavorite}\n              />\n            )}\n          />\n          <Route\n            path=\"phones\"\n            element={(\n              <Phones\n                favorite={favorite}\n                cart={cart}\n                phonesList={phonesList}\n                handleCart={handleCart}\n                handleFavorite={handleFavorite}\n              />\n            )}\n          />\n          <Route\n            path=\"favorites\"\n            element={(\n              <Favorites\n                gadgetsList={gadgetsList}\n                handleCart={handleCart}\n                handleFavorite={handleFavorite}\n                favorite={favorite}\n                cart={cart}\n              />\n            )}\n          />\n          <Route\n            path=\"cart\"\n            element={(\n              <Cart\n                gadgetsList={gadgetsList}\n                handleCart={handleCart}\n                handleFavorite={handleFavorite}\n                favorite={favorite}\n                cart={cart}\n              />\n            )}\n          />\n          <Route\n            path=\"phones/:id\"\n            element={(\n              <ProductDetailsPage\n                allGadgets={gadgetsList}\n                favorite={favorite}\n                cart={cart}\n                gadgetsList={phonesList}\n                type=\"Phones\"\n                handleCart={handleCart}\n                handleFavorite={handleFavorite}\n              />\n            )}\n          />\n          <Route\n            path=\"tablets\"\n            element={(\n              <Tablets\n                favorite={favorite}\n                cart={cart}\n                phonesList={tabletsList}\n                handleCart={handleCart}\n                handleFavorite={handleFavorite}\n              />\n            )}\n          />\n          <Route\n            path=\"tablets/:id\"\n            element={(\n              <ProductDetailsPage\n                allGadgets={gadgetsList}\n                favorite={favorite}\n                cart={cart}\n                gadgetsList={tabletsList}\n                type=\"Tablets\"\n                handleCart={handleCart}\n                handleFavorite={handleFavorite}\n              />\n            )}\n          />\n          <Route\n            path=\"accessories\"\n            element={(\n              <Accessories\n                favorite={favorite}\n                cart={cart}\n                phonesList={accessoriesList}\n                handleCart={handleCart}\n                handleFavorite={handleFavorite}\n              />\n            )}\n          />\n          <Route\n            path=\"accessories/:id\"\n            element={(\n              <ProductDetailsPage\n                allGadgets={gadgetsList}\n                favorite={favorite}\n                cart={cart}\n                gadgetsList={accessoriesList}\n                type=\"Accessories\"\n                handleCart={handleCart}\n                handleFavorite={handleFavorite}\n              />\n            )}\n          />\n        </Route>\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}